# DBSchema Configuration File
# Define multiple targets for generating different outputs

# Global settings (optional)
[settings]
# Default input file if not specified in targets
input = "main.hcl"
# Default variable files
var_files = ["vars.tfvars"]
# Environment variables to set
env = { DATABASE_URL = "postgres://localhost:5432/mydb" }

# Target definitions
[[targets]]
name = "postgres_schema"
description = "Generate PostgreSQL schema for production"
backend = "postgres"
input = "main.hcl"
output = "schema.sql"

# Include/exclude filters
include = ["schemas", "sequences", "tables", "views", "functions", "triggers", "extensions", "policies"]
exclude = []

# Variables for this target
vars = { environment = "production" }

[[targets]]
name = "prisma_client"
description = "Generate Prisma schema for client applications"
backend = "prisma"
input = "main.hcl"
output = "prisma/schema.prisma"

# Only include tables and enums for Prisma
include = ["tables", "enums"]
exclude = ["functions", "triggers", "extensions", "policies", "views", "materialized"]

# Prisma-specific variables
vars = { generate_client = "true" }

[[targets]]
name = "json_docs"
description = "Generate JSON documentation of all resources"
backend = "json"
input = "main.hcl"
output = "docs/schema.json"

# Include everything for documentation
include = ["schemas", "sequences", "enums", "tables", "views", "materialized", "functions", "triggers", "extensions", "policies", "tests"]
exclude = []

# Documentation-specific variables
vars = { include_comments = "true", format_pretty = "true" }

[[targets]]
name = "test_schema"
description = "Generate test database schema"
backend = "postgres"
input = "main.hcl"
output = "test_schema.sql"

# Include test resources
include = ["schemas", "sequences", "tables", "functions", "triggers", "tests"]
exclude = ["extensions", "policies"]

# Test-specific variables
vars = { environment = "test", enable_constraints = "false" }